/*
题目：完全二叉树的子树
问题描述
对一棵完全二叉树，采用自上而下、自左往右的方式从1开始编号，我们已知这个二叉树的最后一个结点是n，
现在的问题是结点m所在的子树一共包括多少个结点？
输入格式
	输入数据包括多行，每行给出一组测试数据，包括两个整数m，n (1 <= m <= n <= 1000000000)。0 0表示输入结束。
输出格式
	对于每一组测试数据，输出一行，该行包含一个整数，给出结点m所在子树中包括的结点的数目。
样例输入
	3 12
    0 0
样例输出
	4
*/
#include<iostream>
int main()
{
    int m = 0,n = 0;
    while(scanf("%d%d",&m,&n) != EOF && m && n){
        int cnt = 1;
        int l = 2*m, r = 2*m+1;
        while(l <= n){
            if(r <= n) cnt = cnt + r - l + 1;
            else cnt = cnt + n - l + 1;
            l = 2*l; r = 2*r+1;
        }
        printf("%d\n",cnt);
    }
    return 0;
}